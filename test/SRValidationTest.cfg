process EcalSelectiveReadoutValid  = {

  untracked PSet maxEvents = {untracked int32 input = 1}
     
  # initialize  MessageLogger
  include "FWCore/MessageLogger/data/MessageLogger.cfi"   

  # initialize magnetic field
  include "Configuration/StandardSequences/data/MagneticField.cff"

  # geometry (Only Ecal)
  include "Geometry/EcalCommonData/data/EcalOnly.cfi"

  module o1 = PoolOutputModule { 
         untracked string fileName = "QCD_pt30_50_all_SRValidation.root"      
         untracked vstring outputCommands = 
         {  
           "keep *"  #,
#           "drop *_simEcalUnsuppressedDigis_*_*",
#           "drop *_simEcalDigis_*_*",
#           "drop *_simEcalPreshowerDigis_*_*"
          }

  }
                                                                                
# DQM services:
  include "DQMServices/Core/data/DQM.cfg"
  replace DQM.collectorHost = ""

    service = RandomNumberGeneratorService
    { 
        untracked uint32 sourceSeed = 135799753
        PSet moduleSeeds =
        {
            untracked uint32 VtxSmeared = 123456789
            untracked uint32 g4SimHits = 9876
            untracked uint32 simEcalUnsuppressedDigis = 9876
        }
    }

#  service = Timing{ }
#  service = SimpleMemoryCheck{ }

  include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

  # Generation:
#  source = FlatRandomEGunSource
#  {
#     untracked PSet PGunParameters =
#     {
#        # you can request more than 1 particle
#        #vint32  PartID = {211,11}
#        #vint32 PartID = { 13 } 
#        untracked vint32 PartID = { 11 } #11->e-
#        untracked double MinEta = -3.0
#        untracked double MaxEta = 3.0
#        untracked double MinPhi = -3.14159265358979323846 # must be in radians
#        untracked double MaxPhi = 3.14159265358979323846
#        untracked double MinE  = 99.99
#        untracked double MaxE  = 100.01
#     }
#     untracked int32 Verbosity = 0 # set to 1 (or greater)  for printouts
#  }

  source = PythiaSource
   {
   untracked int32 pythiaPylistVerbosity = 0
   untracked bool pythiaHepMCVerbosity = false
   untracked int32 maxEventsToPrint = 0

   PSet PythiaParameters = {

     # This is a vector of ParameterSet names to be read, in this order
     vstring parameterSets = {
       "pythiaUESettings",
       "processParameters"
     }

   include "Configuration/Generator/data/PythiaUESettings.cfi"

     vstring processParameters = {
        'MSEL=1               ! QCD hight pT processes',
        'CKIN(3)=30.          ! minimum pt hat for hard interactions',
        'CKIN(4)=50.          ! maximum pt hat for hard interactions'
     }

    }
   }

  # event vertex smearing - applies only once (internal check)
  # Note : all internal generators will always do (0,0,0) vertex
  #
  include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"

  # run simulation, with EcalHits Validation specific watcher 
  include "SimG4Core/Application/data/g4SimHits.cfi"
  replace g4SimHits.Generator.HepMCProductLabel = "source"
#  replace g4SimHits.Watchers = {
#       { string type = "EcalSimHitsValidProducer"
#         untracked string instanceLabel="EcalValidInfo"
#         untracked bool verbose = false
#       }
#  }
		
  # Mixing Module
  include "SimGeneral/MixingModule/data/mixNoPU.cfi"

  include "CalibCalorimetry/Configuration/data/Ecal_FakeConditions.cff"

  # For TPG scale:
  es_source tpparams12 = EmptyESSource {
       string recordName = "EcalTPGPhysicsConstRcd"
       vuint32 firstValid = { 1 }
       bool iovIsRunNotTime = true
  }

  # ECAL digitization sequence
  include "SimCalorimetry/Configuration/data/ecalDigiSequence.cff" 

  replace simEcalDigis.writeSrFlags = true

  # ECAL digis validation sequence
  #include "Validation/EcalDigis/data/ecalDigisValidationSequence.cff"
  
  # Defines Ecal seletive readout validation module, ecalSelectiveReadoutValidation:
  include "Validation/EcalDigis/data/ecalSelectiveReadoutValidation.cfi"

  #ECAL reco sequence:
  include "RecoLocalCalo/Configuration/data/ecalLocalRecoSequence.cff"

  sequence detSim = { VtxSmeared, g4SimHits }

  path p1 = { detSim, mix, simEcalUnsuppressedDigis, simEcalTriggerPrimitiveDigis, simEcalDigis, ecalWeightUncalibRecHit, ecalRecHit, ecalSelectiveReadoutValidation }
  endpath outpath = { o1 }
}
