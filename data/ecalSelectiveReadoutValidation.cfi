module ecalSelectiveReadoutValidation = EcalSelectiveReadoutValidation {
  InputTag EbDigiCollection = simEcalDigis:ebDigis
  InputTag EeDigiCollection = simEcalDigis:eeDigis
  InputTag EbUnsuppressedDigiCollection = simEcalUnsuppressedDigis:
  InputTag EeUnsuppressedDigiCollection = simEcalUnsuppressedDigis:
  InputTag EbSrFlagCollection = simEcalDigis:ebSrFlags
  InputTag EeSrFlagCollection = simEcalDigis:eeSrFlags
  InputTag EbSimHitCollection = g4SimHits:EcalHitsEB
  InputTag EeSimHitCollection = g4SimHits:EcalHitsEE
  InputTag TrigPrimCollection = simEcalTriggerPrimitiveDigis:
  InputTag EbRecHitCollection = ecalRecHit:EcalRecHitsEB
  InputTag EeRecHitCollection = ecalRecHit:EcalRecHitsEE
  InputTag FEDRawCollection = source:

  #Versbose mode switch:
  untracked bool verbose = true

  #Name of the output histrogram root file:
  untracked string outputFile = "EcalSelectiveReadoutValidationHistos.root"

  #Switch to enable locale amplitude reconstruction from digis instead 
  #of RecHit's:
  bool LocalReco = true

  #Weights used for the local reconstruction of the signal amplitude:
  vdouble weights = {-0.295252, -0.295252, -0.295252, -0.286034, 0.240376, 0.402839, 0.322126, 0.172504, 0.0339461, 0.} #my computation

  #Switch to express TP in GeV for the histograms:
  bool tpInGeV = true

  #ROOT/DQM directory where to store the histograms
  string histDir = "EcalDigisV/EcalDigiTask"

  #List of histograms to produce. Run the module once with LogInfo enabled
  #in order to get the list of available histograms. If the list contains
  #the keyword "all", every available histogram is produced.
  untracked vstring histograms = { "all" }

 #Switch to enable or disable warning about missing collection
  untracked bool warnIfCollectionNotFound = true
}
